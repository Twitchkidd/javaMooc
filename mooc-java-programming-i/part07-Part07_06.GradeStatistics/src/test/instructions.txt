Enter point totals, -1 stops:
102
-2
1
33
77
99
-1
Point average (all): 52.5
Point average (passing): 88.0
Pass percentage: 50.0
Grade distribution:
5: *
4:
3: *
2:
1:
0: **

Test-driven software development consists of five steps that are repeated
until the functionality of the program is complete.

Write a test. The programmer decides which program functionality to test
and writes a test for it.
Run the tests and check if the tests pass. When a new test is written, the
tests are run. If the test passes, the test is most likely erroneous and
should be corrected - the test should only test functionality that hasn't
yet been implemented.
Write the functionality that meets the test's requirements. The programmer
implements functionality that only meets the test requirements. Note: this
doesn't do things that the test does not require - functionality is only
added in small increments.
Perform the tests. If the tests fail, there is likely to be an error in the
functionality written. Correct the functionality - or, if there is no error
in the functionality, fix the latest test that was performed.
Repair the internal structure of the program. As the size of the program
increases, its internal structure is adjusted as needed. Methods that are
too long are broken down into multiple parts and classes representing
concepts are isolated. The tests are not modified, but are instead used
to verify the correctness of the changes made to the program's internal
structure - if a change in the program structure changes the functionality
of the program, the tests will produce a warning and the programmer can
remedy the situation.

Okay, so UserInterface ... do I pass a scanner object, did I see that
previously? What am I testing for? It's got to return with something from
the user, it's got to be empty if the user doesn't enter anything, it's
got to stop when -1 is entered ... how about "it's got to be empty if the
user doesn't enter anything" ... no, wait, the exit condition.